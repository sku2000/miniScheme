// Generated from java-escape by ANTLR 4.11.1

package parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class SS2Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, MUL=9, 
		SUB=10, ADD=11, AND=12, OR=13, SRA=14, WS=15, LABEL=16, NUMBER=17, INT=18, 
		REG=19, FVAR=20;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "MUL", 
			"SUB", "ADD", "AND", "OR", "SRA", "WS", "LABEL", "NUMBER", "INT", "REG", 
			"FVAR"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "'letrec'", "')'", "'['", "'lambda'", "']'", "'begin'", 
			"'set!'", "'*'", "'-'", "'+'", "'logand'", "'logor'", "'sra'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, "MUL", "SUB", "ADD", 
			"AND", "OR", "SRA", "WS", "LABEL", "NUMBER", "INT", "REG", "FVAR"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SS2Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SS2.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0014\u00b2\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\u000e\u0004\u000ec\b\u000e\u000b\u000e\f\u000ed\u0001"+
		"\u000e\u0001\u000e\u0001\u000f\u0005\u000fj\b\u000f\n\u000f\f\u000fm\t"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0003\u0010s\b"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0005"+
		"\u0011z\b\u0011\n\u0011\f\u0011}\t\u0011\u0003\u0011\u007f\b\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001"+
		"\u0012\u0003\u0012\u00ac\b\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001"+
		"\u0013\u0001\u0013\u0000\u0000\u0014\u0001\u0001\u0003\u0002\u0005\u0003"+
		"\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015"+
		"\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012"+
		"%\u0013\'\u0014\u0001\u0000\u0004\u0003\u0000\t\n\r\r  \u0006\u0000!!"+
		"$$--??AZaz\u0001\u000019\u0001\u000009\u00c4\u0000\u0001\u0001\u0000\u0000"+
		"\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000"+
		"\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000"+
		"\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000"+
		"\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000"+
		"\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000"+
		"\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000"+
		"\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000"+
		"\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001"+
		"\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000"+
		"\u0000\u0000\u0001)\u0001\u0000\u0000\u0000\u0003+\u0001\u0000\u0000\u0000"+
		"\u00052\u0001\u0000\u0000\u0000\u00074\u0001\u0000\u0000\u0000\t6\u0001"+
		"\u0000\u0000\u0000\u000b=\u0001\u0000\u0000\u0000\r?\u0001\u0000\u0000"+
		"\u0000\u000fE\u0001\u0000\u0000\u0000\u0011J\u0001\u0000\u0000\u0000\u0013"+
		"L\u0001\u0000\u0000\u0000\u0015N\u0001\u0000\u0000\u0000\u0017P\u0001"+
		"\u0000\u0000\u0000\u0019W\u0001\u0000\u0000\u0000\u001b]\u0001\u0000\u0000"+
		"\u0000\u001db\u0001\u0000\u0000\u0000\u001fk\u0001\u0000\u0000\u0000!"+
		"r\u0001\u0000\u0000\u0000#~\u0001\u0000\u0000\u0000%\u00ab\u0001\u0000"+
		"\u0000\u0000\'\u00ad\u0001\u0000\u0000\u0000)*\u0005(\u0000\u0000*\u0002"+
		"\u0001\u0000\u0000\u0000+,\u0005l\u0000\u0000,-\u0005e\u0000\u0000-.\u0005"+
		"t\u0000\u0000./\u0005r\u0000\u0000/0\u0005e\u0000\u000001\u0005c\u0000"+
		"\u00001\u0004\u0001\u0000\u0000\u000023\u0005)\u0000\u00003\u0006\u0001"+
		"\u0000\u0000\u000045\u0005[\u0000\u00005\b\u0001\u0000\u0000\u000067\u0005"+
		"l\u0000\u000078\u0005a\u0000\u000089\u0005m\u0000\u00009:\u0005b\u0000"+
		"\u0000:;\u0005d\u0000\u0000;<\u0005a\u0000\u0000<\n\u0001\u0000\u0000"+
		"\u0000=>\u0005]\u0000\u0000>\f\u0001\u0000\u0000\u0000?@\u0005b\u0000"+
		"\u0000@A\u0005e\u0000\u0000AB\u0005g\u0000\u0000BC\u0005i\u0000\u0000"+
		"CD\u0005n\u0000\u0000D\u000e\u0001\u0000\u0000\u0000EF\u0005s\u0000\u0000"+
		"FG\u0005e\u0000\u0000GH\u0005t\u0000\u0000HI\u0005!\u0000\u0000I\u0010"+
		"\u0001\u0000\u0000\u0000JK\u0005*\u0000\u0000K\u0012\u0001\u0000\u0000"+
		"\u0000LM\u0005-\u0000\u0000M\u0014\u0001\u0000\u0000\u0000NO\u0005+\u0000"+
		"\u0000O\u0016\u0001\u0000\u0000\u0000PQ\u0005l\u0000\u0000QR\u0005o\u0000"+
		"\u0000RS\u0005g\u0000\u0000ST\u0005a\u0000\u0000TU\u0005n\u0000\u0000"+
		"UV\u0005d\u0000\u0000V\u0018\u0001\u0000\u0000\u0000WX\u0005l\u0000\u0000"+
		"XY\u0005o\u0000\u0000YZ\u0005g\u0000\u0000Z[\u0005o\u0000\u0000[\\\u0005"+
		"r\u0000\u0000\\\u001a\u0001\u0000\u0000\u0000]^\u0005s\u0000\u0000^_\u0005"+
		"r\u0000\u0000_`\u0005a\u0000\u0000`\u001c\u0001\u0000\u0000\u0000ac\u0007"+
		"\u0000\u0000\u0000ba\u0001\u0000\u0000\u0000cd\u0001\u0000\u0000\u0000"+
		"db\u0001\u0000\u0000\u0000de\u0001\u0000\u0000\u0000ef\u0001\u0000\u0000"+
		"\u0000fg\u0006\u000e\u0000\u0000g\u001e\u0001\u0000\u0000\u0000hj\u0007"+
		"\u0001\u0000\u0000ih\u0001\u0000\u0000\u0000jm\u0001\u0000\u0000\u0000"+
		"ki\u0001\u0000\u0000\u0000kl\u0001\u0000\u0000\u0000ln\u0001\u0000\u0000"+
		"\u0000mk\u0001\u0000\u0000\u0000no\u0005$\u0000\u0000op\u0003#\u0011\u0000"+
		"p \u0001\u0000\u0000\u0000qs\u0005-\u0000\u0000rq\u0001\u0000\u0000\u0000"+
		"rs\u0001\u0000\u0000\u0000st\u0001\u0000\u0000\u0000tu\u0003#\u0011\u0000"+
		"u\"\u0001\u0000\u0000\u0000v\u007f\u00050\u0000\u0000w{\u0007\u0002\u0000"+
		"\u0000xz\u0007\u0003\u0000\u0000yx\u0001\u0000\u0000\u0000z}\u0001\u0000"+
		"\u0000\u0000{y\u0001\u0000\u0000\u0000{|\u0001\u0000\u0000\u0000|\u007f"+
		"\u0001\u0000\u0000\u0000}{\u0001\u0000\u0000\u0000~v\u0001\u0000\u0000"+
		"\u0000~w\u0001\u0000\u0000\u0000\u007f$\u0001\u0000\u0000\u0000\u0080"+
		"\u0081\u0005r\u0000\u0000\u0081\u0082\u0005a\u0000\u0000\u0082\u00ac\u0005"+
		"x\u0000\u0000\u0083\u0084\u0005r\u0000\u0000\u0084\u0085\u0005c\u0000"+
		"\u0000\u0085\u00ac\u0005x\u0000\u0000\u0086\u0087\u0005r\u0000\u0000\u0087"+
		"\u0088\u0005d\u0000\u0000\u0088\u00ac\u0005x\u0000\u0000\u0089\u008a\u0005"+
		"r\u0000\u0000\u008a\u008b\u0005b\u0000\u0000\u008b\u00ac\u0005x\u0000"+
		"\u0000\u008c\u008d\u0005r\u0000\u0000\u008d\u008e\u0005b\u0000\u0000\u008e"+
		"\u00ac\u0005p\u0000\u0000\u008f\u0090\u0005r\u0000\u0000\u0090\u0091\u0005"+
		"s\u0000\u0000\u0091\u00ac\u0005i\u0000\u0000\u0092\u0093\u0005r\u0000"+
		"\u0000\u0093\u0094\u0005d\u0000\u0000\u0094\u00ac\u0005i\u0000\u0000\u0095"+
		"\u0096\u0005r\u0000\u0000\u0096\u00ac\u00058\u0000\u0000\u0097\u0098\u0005"+
		"r\u0000\u0000\u0098\u00ac\u00059\u0000\u0000\u0099\u009a\u0005r\u0000"+
		"\u0000\u009a\u009b\u00051\u0000\u0000\u009b\u00ac\u00050\u0000\u0000\u009c"+
		"\u009d\u0005r\u0000\u0000\u009d\u009e\u00051\u0000\u0000\u009e\u00ac\u0005"+
		"1\u0000\u0000\u009f\u00a0\u0005r\u0000\u0000\u00a0\u00a1\u00051\u0000"+
		"\u0000\u00a1\u00ac\u00052\u0000\u0000\u00a2\u00a3\u0005r\u0000\u0000\u00a3"+
		"\u00a4\u00051\u0000\u0000\u00a4\u00ac\u00053\u0000\u0000\u00a5\u00a6\u0005"+
		"r\u0000\u0000\u00a6\u00a7\u00051\u0000\u0000\u00a7\u00ac\u00054\u0000"+
		"\u0000\u00a8\u00a9\u0005r\u0000\u0000\u00a9\u00aa\u00051\u0000\u0000\u00aa"+
		"\u00ac\u00055\u0000\u0000\u00ab\u0080\u0001\u0000\u0000\u0000\u00ab\u0083"+
		"\u0001\u0000\u0000\u0000\u00ab\u0086\u0001\u0000\u0000\u0000\u00ab\u0089"+
		"\u0001\u0000\u0000\u0000\u00ab\u008c\u0001\u0000\u0000\u0000\u00ab\u008f"+
		"\u0001\u0000\u0000\u0000\u00ab\u0092\u0001\u0000\u0000\u0000\u00ab\u0095"+
		"\u0001\u0000\u0000\u0000\u00ab\u0097\u0001\u0000\u0000\u0000\u00ab\u0099"+
		"\u0001\u0000\u0000\u0000\u00ab\u009c\u0001\u0000\u0000\u0000\u00ab\u009f"+
		"\u0001\u0000\u0000\u0000\u00ab\u00a2\u0001\u0000\u0000\u0000\u00ab\u00a5"+
		"\u0001\u0000\u0000\u0000\u00ab\u00a8\u0001\u0000\u0000\u0000\u00ac&\u0001"+
		"\u0000\u0000\u0000\u00ad\u00ae\u0005f\u0000\u0000\u00ae\u00af\u0005v\u0000"+
		"\u0000\u00af\u00b0\u0001\u0000\u0000\u0000\u00b0\u00b1\u0003#\u0011\u0000"+
		"\u00b1(\u0001\u0000\u0000\u0000\u0007\u0000dkr{~\u00ab\u0001\u0000\u0001"+
		"\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}